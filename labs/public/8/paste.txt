After getting a shell and running tools like LinPeas, the only noteworthy item was the kernel version. Looking up the kernel version on ExploitDB showed a variety of exploits to try. The issue was cross compiling the exploit to the architecture of .8. I followed the guide on the forums (https://forums.offensive-security.com/showthread.php?48259-Fix-for-incompatibility-with-older-versions-of-gcc-Kali-2022-3&highlight=docker+guide), specifically, the guide on creating a local docker container with a shared directory. I compiled the exploits with the following flags: gcc -Wall -Wll,--hash-type=both -m32 -o exploit exploit.c. -static was not necessary and I fought with many methods of cross compilation with all sorts of combinations of compiler flags. Eventually, I was able to the get exploits to successfully run, but once they were ran, I was prompted with another low priv shell as the user Apache. Reading through the forums it was clear that I needed to fix the ***5.c exploit by reading the vendor suggested mitigations. However, the vendor suggested mitigations were to set various affect modules to /bin/true. I couldn't figure out which modules were affected and had trouble getting started with enumerating the modules affected. I then moved on to a different kernel exploit that was able to successfully exploit the machine without modification.
